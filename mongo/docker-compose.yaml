services:
  # Первый узел репликации шарда 1
  mongors1n1:
    container_name: mongors1n1
    image: mongo
    # Запуск MongoDB в режиме шардирования и репликации
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27017:27017
    expose:
      - "27017"
    volumes:
      - mongors1n1_data:/data/db

  # Второй узел репликации шарда 1
  mongors1n2:
    container_name: mongors1n2
    image: mongo
    # Запуск MongoDB в режиме шардирования и репликации
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27027:27017
    expose:
      - "27017"
    volumes:
      - mongors1n2_data:/data/db

  # Третий узел репликации шарда 1
  mongors1n3:
    container_name: mongors1n3
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27037:27017
    expose:
      - "27017"
    volumes:
      - mongors1n3_data:/data/db

  # Первый узел репликации шарда 2
  mongors2n1:
    container_name: mongors2n1
    image: mongo
    # Запуск MongoDB в режиме шардирования и репликации
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27047:27017
    expose:
      - "27017"
    volumes:
      - mongors2n1_data:/data/db

  # Второй узел репликации шарда 2
  mongors2n2:
    container_name: mongors2n2
    image: mongo
    # Запуск MongoDB в режиме шардирования и репликации
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27057:27017
    expose:
      - "27017"
    volumes:
      - mongors2n2_data:/data/db

  # Третий узел репликации шарда 2
  mongors2n3:
    container_name: mongors2n3
    image: mongo
    # Запуск MongoDB в режиме шардирования и репликации
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27067:27017
    expose:
      - "27017"
    volumes:
      - mongors2n3_data:/data/db

  # Первый узел конфигурационного сервера
  mongocfg1:
    container_name: mongocfg1
    image: mongo
    # Запуск в MongoDB режиме конфигурационного сервера
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - mongocfg1_data:/data/db

  # Второй узел конфигурационного сервера
  mongocfg2:
    container_name: mongocfg2
    image: mongo
    # Запуск в MongoDB режиме конфигурационного сервера
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - mongocfg2_data:/data/db

  # Третий узел конфигурационного сервера
  mongocfg3:
    container_name: mongocfg3
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - mongocfg3_data:/data/db

  # Первый маршрутизатор (mongos) с доступом на порту 27019
  mongos1:
    container_name: mongos1
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    # Запуск mongos с настройкой связи с конфигурационными серверами
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--host", "mongos1", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 27019:27017
    expose:
      - "27017"
  
  # Второй маршрутизатор (mongos) с доступом на порту 27020
  mongos2:
    container_name: mongos2
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    # Запуск mongos с настройкой связи с конфигурационными серверами
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - 27020:27017
    expose:
      - "27017"

volumes:
  mongocfg1_data:
  mongocfg2_data:
  mongocfg3_data:
  mongors1n1_data:
  mongors1n2_data:
  mongors1n3_data:
  mongors2n1_data:
  mongors2n2_data:
  mongors2n3_data: